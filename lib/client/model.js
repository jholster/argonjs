// Generated by CoffeeScript 1.6.3
var AbstractModel, ClientModel, SocketClient, exports, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __slice = [].slice;

AbstractModel = require('../model');

SocketClient = require('./socket');

ClientModel = (function(_super) {
  var _this = this;

  __extends(ClientModel, _super);

  function ClientModel() {
    _ref = ClientModel.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  ClientModel.remote = new SocketClient;

  ClientModel.remote.on('ready', function() {
    return ClientModel.emit('ready');
  });

  ClientModel.find = function(query, options, cb) {
    var _this = this;
    if (!cb) {
      cb = options;
    }
    return this.remote.call("" + this.name + ".find", [query, options], function(err, records) {
      return cb(err, records && (records.map(function(r) {
        return new _this(r);
      })) || null);
    });
  };

  ClientModel.save = function(record, cb) {
    var _this = this;
    return this.remote.call("" + this.name + ".save", [record], function(err, record) {
      return cb(err, record && (new _this(record)) || null);
    });
  };

  ClientModel.remove = function() {
    var args, cb, _i;
    args = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), cb = arguments[_i++];
    return this.remote.call("" + this.name + ".remove", args, cb);
  };

  return ClientModel;

}).call(this, AbstractModel);

exports = module.exports = ClientModel;

/*
//@ sourceMappingURL=model.map
*/
